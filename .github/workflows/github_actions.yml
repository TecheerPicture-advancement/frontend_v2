name: CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          check-latest: true
      - name: Install dependencies
        run: |
          cd server  # server 디렉토리로 이동
          npm install  # package-lock.json이 없으면 생성
      - name: Check
        run: |
          cd server  # server 디렉토리로 이동
          npm run lint-diff
        env:
          CI: true
          BASE: ${{ github.base_ref }}
          HEAD: ${{ github.head_ref }}

  build:
    runs-on: ubuntu-latest
    needs: check

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    if: ${{ !startsWith(github.ref, 'refs/heads/chore/') && !startsWith(github.ref, 'refs/heads/env/') }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd server  # server 디렉토리로 이동
          npm install  # 해당 디렉토리에서 실행

      - name: Run ESLint
        run: |
          cd server  # server 디렉토리로 이동
          npm run lint  

      - name: Run Tests
        run: |
          cd server  # server 디렉토리로 이동
          npm test --coverage

      - name: Build
        run: |
          cd server  # server 디렉토리로 이동
          npm run build

      - name: Upload Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: server/build/

  coverage:
    runs-on: ubuntu-latest
    needs: build 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js for Coverage
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: |
          cd server  # server 디렉토리로 이동
          npm install  # 의존성 설치

      - name: Install Codecov
        run: |
          cd server  # server 디렉토리로 이동
          npm install --save-dev codecov  # Codecov 설치

      - name: Upload coverage to Codecov
        run: |
          cd server  # server 디렉토리로 이동
          npx codecov  # codecov을 실행하여 coverage 업로드
